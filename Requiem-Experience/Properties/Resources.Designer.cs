//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequiemExperience.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Requiem-Experience.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Way to aggregate levels
        ///Mode: Mean
        ///
        ///## NPC EditorIDs ignore list
        ///Ignore: .*3DNPC.*      ;levels of 3DNPC entities are just random
        ///Ignore: callenhorker   ;level is out of place
        ///Ignore: DLC2Miraak.*   ;his human form spoils humanoids
        ///Ignore: zzzCHMemory.*  ;VIGILANT is not really balanced for Requiem
        ///Ignore: Summon.*       ;levels of summonned entities shouldn&apos;t affect wild XP
        ///
        ///## Race prefixes which must be grouped up to avoid racism, e.g. XP will be even
        ///Groups: Atronachs = AtronachFrost,Atron [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string npcs {
            get {
                return ResourceManager.GetString("npcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Uncomment below to enable debugging
        ///debug
        ///
        ///## Requiem installation quest = no XP
        ///REQ_Quest_Installation=Misc
        ///
        ///## Live Another Life = no XP
        ///MQ101=Misc
        ///ARTHLALChargenQuest=Misc
        ///
        ///## Helgen quest which kicks off main story = minimal XP
        ///ARTHLALRumorsOfWarQuest=None
        ///
        ///## Courier missives, minimal / small XP for all
        ///_M_Quest.*CourierLetterLow=None
        ///_M_Quest.*CourierLetterMed=None
        ///_M_Quest.*CourierLetterHigh=SideQuest
        ///_M_Quest.*CourierPotionLow=None
        ///_M_Quest.*CourierPotionMed=None
        ///_M_Quest.*Cour [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quests {
            get {
                return ResourceManager.GetString("quests", resourceCulture);
            }
        }
    }
}
